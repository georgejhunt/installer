#!/bin/sh -x
# tinycore script to partition, and load the OS for XSCE
#
# change log ======================================
# 160218 give up on EFI, dispense with FAT partition, so now just root, and library

# first look for command line flags 
TARGET_LOADER="MBR"
EFI=`grep -w efi /proc/cmdline`
MBR=`grep -w mbr /proc/cmdline`
i686=`grep -w i686 /proc/cmdline`
x86_64=`grep -w x86_64 /proc/cmdline`
PAYLOAD='netinst' # default for the initial install
PAYLOAD_ARCH="x86_64"
ROOTFS="sda2"


# get the variables that are being passed back and forth
#  in particular, PAYLOAD is the name of the tgz image
source /mnt/sdb2/tce/installer.conf
# TARLIB controls whether a separate library tar is generated

SRCDIR=$(cd `dirname ${0}`; pwd)
curdir=`pwd`

# wipe out the partition table
if [ -d /mnt/sdb2/tce ];then
	dd ip=/dev/zero of=/dev/sda bs=512 count=2
fi

# for testing purposes we need to be able to delete a gpt and initialize
#  as a mbr partition table. But only gdisk knows where gpt is 

# First determine if current partition table is gpt
gpt=`blkid /dev/sda | grep gpt`
if [ ! -z "$gpt" ]; then
# following deletes (zaps) a gpt partition table
cat << EOF | gdisk /dev/sda
x
z
y
y
EOF
fi

# parted refuses to rm partition without interaction, so blast partition table
dd if=/dev/zero of=/dev/sda bs=512 count=1

parted -s /dev/sda mklabel msdos
partprobe /dev/sda
parted -s -a optimal /dev/sda mkpart primary fat32 8192s 300mB
parted -s -a optimal /dev/sda mkpart primary ext4 300mB 46gB
parted -s -a optimal /dev/sda mkpart primary linux-swap 46gB 50gB
parted -s -a optimal -- /dev/sda mkpart primary ext4 50gB -1s

partprobe /dev/sda
until [ -e /dev/sda1 ]; do sleep .25; done

mkfs.vfat -n boot /dev/sda1
mkfs.ext4 -L rootfs /dev/$ROOTFS
mkswap -L swap /dev/sda3
mkfs.ext4 -L library /dev/sda4

mkdir -p /mnt/sda1
mkdir -p /mnt/$ROOTFS
mkdir -p /mnt/sda4
mount /dev/sda1 /mnt/sda1
mount /dev/$ROOTFS /mnt/$ROOTFS

mount /dev/sda4 /mnt/sda4
## put a file on this drive that we can look for
mkdir -p /mnt/sda1/grub
cd /mnt/sda4
mkdir -p cache
cd /mnt/$ROOTFS
umount /mnt/sda4

#create mount points for the partitions
mkdir -p /mnt/$ROOTFS/library
mkdir -p /mnt/$ROOTFS/boot
# mount them
mount /dev/sda4 /mnt/$ROOTFS/library
until [ -d /mnt/$ROOTFS/library/cache ]; do sleep .25; done
mount /dev/sda1 /mnt/$ROOTFS/boot 
until [ -d /mnt/$ROOTFS/boot/grub ]; do sleep .25; done

# put the root file system in place
cd /mnt/$ROOTFS/
tar -xf ${SRCDIR}/${FC_VER}/${PAYLOAD_ARCH}/${PAYLOAD_ARCH}fc${FC_VER}_${PAYLOAD}.tgz

# need to put the library contents in place via a separate tar file
if [ "$PAYLOAD" != "netinst" -a "$TARLIB" == "true" ];then
  cd /mnt/$ROOTFS/library
  tar -xf ${SRCDIR}/${FC_VER}/${PAYLOAD_ARCH}/${PAYLOAD_ARCH}fc${FC_VER}_${PAYLOAD}-library.tgz
fi

cd $curdir 

# create a fstab
cat << EOF > /mnt/$ROOTFS/etc/fstab
LABEL=rootfs	/	ext4	defaults	0	1
LABEL=boot	/boot	vfat	defaults	0	1
LABEL=swap	/	swap	defaults	0	0
LABEL=library	/library	ext4	defaults	0	2
EOF

# now install the grub mbr loader, and the grub EFI loader
# following set up the mbr boot requirements
grub-install --boot-directory=/mnt/$ROOTFS/boot /dev/sda

# the shuttle is where to put any scripts to make deployment wide changes
mkdir -p /mnt/$ROOTFS/opt/schoolserver/xsce/scripts/installer
cp /mnt/sdb2/tce/shuttle/xsce-after-installer /mnt/$ROOTFS/opt/schoolserver/xsce/scripts/installer/
cp /mnt/sdb2/tce/shuttle/sysprep /mnt/$ROOTFS/opt/schoolserver/xsce/scripts/installer/
ln -s /opt/schoolserver/xsce/scripts/installer/sysprep /mnt/$ROOTFS/usr/local/sbin/sysprep
ln -s /opt/schoolserver/xsce/xsce-network /mnt/$ROOTFS/usr/local/sbin/xs-network
cp /mnt/sdb2/tce/shuttle/finish-install.service /mnt/$ROOTFS/etc/systemd/system/

# blast the modified grub.cfg to the correct place
cp -f /mnt/sdb2/tce/grub.cfg /mnt/sda1/boot/grub/
echo
echo done!
echo
# vim: ts=4 et
